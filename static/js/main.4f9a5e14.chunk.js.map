{"version":3,"sources":["constants/actionTYPE.js","actions/index.js","components/Taskform.js","components/Search.js","components/Sort.js","components/Control.js","components/TaskItem.js","components/TaskList.js","App.js","reportWebVitals.js","reducers/tasks.js","reducers/isDisplay.js","reducers/updateItem.js","reducers/filterTable.js","reducers/search.js","reducers/sort.js","reducers/index.js","index.js"],"names":["VIEWLIST","ADDTASK","TOGGLE_FORM","CLOSE_FORM","SHOW_FORM","UPDATE_STATUS","DELETE","UPDATE","FILTER_TABLE","SEARCH","SORT","CLOSE","type","TYPE","OPEN","task","Taskform","props","closeForm","value","onCloseForm","handleChange","e","targerts","target","name","setState","handleSubmit","preventDefault","onSaveTask","state","id","status","cleaerForm","onShowForm","nextProps","updateI","this","isDisplay","className","onClick","onSubmit","onChange","required","Component","connect","dispatch","actions","Search","event","keywords","length","onSearch","placeholder","filter","Sort","OnClick","by","onSort","sort","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","href","role","Control","TaskItem","onDelete","onDeleteByID","onUpStatus","onUpdateStatus","onUpdate","onUpdateItem","stt","TaskList","filte","filtername","parseInt","filterStatus","onFilter","tasks","search","toLowerCase","indexOf","a","b","elements","map","index","defaultValue","App","toggleDisplay","onToggleDisplay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","data","JSON","parse","localStorage","getItem","initial","s4","Math","floor","random","toString","substring","gennerateID","myReducer","action","findIndex","newTask","console","log","push","setItem","stringify","splice","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f9a5e14.chunk.js","sourcesContent":["export const VIEWLIST = 'VIEWLIST';\r\nexport const ADDTASK = 'ADDTASK';\r\nexport const TOGGLE_FORM = 'TOGGLE_FORM';\r\nexport const CLOSE_FORM = 'CLOSE_FORM';\r\nexport const SHOW_FORM = 'SHOW_FORM';\r\nexport const UPDATE_STATUS = 'UPDATE_STATUS';\r\nexport const DELETE = 'DELETE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const FILTER_TABLE = 'FILTER_TABLE';\r\nexport const SEARCH = 'SEARCH';\r\nexport const SORT = 'SORT';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import * as TYPE from './../constants/actionTYPE';\r\nexport const LISTALL = () => {\r\n    return {\r\n        type: TYPE.VIEWLIST,\r\n    }\r\n}\r\nexport const ADDTASK = (task) => {\r\n    return {\r\n        type: TYPE.ADDTASK,\r\n        task\r\n    }\r\n}\r\nexport const TOGGLE = (status,task) => {\r\n    return {\r\n        type: TYPE.TOGGLE_FORM,\r\n        status:!status,\r\n        task\r\n    }\r\n}\r\nexport const CLOSE = () => {\r\n    return {\r\n        type: TYPE.CLOSE_FORM,\r\n    }\r\n}\r\nexport const OPEN = () => {\r\n    return {\r\n        type: TYPE.SHOW_FORM,\r\n    }\r\n}\r\n\r\nexport const UPDATESTATUS = (id) => {\r\n    return {\r\n        type: TYPE.UPDATE_STATUS,\r\n        id\r\n    }\r\n}\r\nexport const DELETE = (id) => {\r\n    return {\r\n        type: TYPE.DELETE,\r\n        id\r\n    }\r\n}\r\nexport const UPDATE = (task) => {\r\n    return {\r\n        type: TYPE.UPDATE,\r\n        task\r\n    }\r\n}\r\nexport const FILTER = (filter) => {\r\n    return {\r\n        type: TYPE.FILTER_TABLE,\r\n        filter\r\n    }\r\n}\r\nexport const SEARCH = (keywords) => {\r\n    return {\r\n        type: TYPE.SEARCH,\r\n        keywords\r\n    }\r\n}\r\nexport const SORT = (sort) => {\r\n    return {\r\n        type: TYPE.SORT,\r\n        sort\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './../actions/index';\r\nclass Taskform extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: \"\",\r\n            status: false\r\n        }\r\n    }\r\n    closeForm = (value) => {\r\n        this.props.onCloseForm(value);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps && nextProps.updateI) {\r\n            this.setState({\r\n                id: nextProps.updateI.task.id,\r\n                name: nextProps.updateI.task.name,\r\n                status: nextProps.updateI.task.status\r\n            })\r\n        } else {\r\n            this.setState({\r\n                id: '',\r\n                name: '',\r\n                status: false,\r\n            })\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        const targerts = e.target;\r\n        const name = targerts.name;\r\n        const value = targerts.value;\r\n        this.setState({\r\n            [name]: value === \"true\" ? true : value === \"false\" ? false : value,\r\n        });\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onSaveTask(this.state);\r\n        this.setState({\r\n            id: '',\r\n            name: \"\",\r\n            status: false\r\n        })\r\n        this.cleaerForm();\r\n    }\r\n    cleaerForm = () => {\r\n        this.setState({\r\n            name: '',\r\n            status: false,\r\n        });\r\n        this.props.onShowForm();\r\n    }\r\n    render() {\r\n        let { id, status, name } = this.state;\r\n        if (!this.props.isDisplay) return '';\r\n        return (\r\n            <div className=\"panel panel-warning\">\r\n                <div className=\"panel-heading\" onClick={() => this.closeForm(false)}>\r\n                    <h3 className=\"panel-title\">\r\n                        {id !== '' ? 'Cập Nhật Công Việc' : 'Thêm Công Việc'}</h3>\r\n                    <i className=\"ti-close\"></i>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Tên :</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"name\" value={name} onChange={this.handleChange} />\r\n                        </div>\r\n                        <label>Trạng Thái :</label>\r\n                        <select className=\"form-control\" required=\"required\" name=\"status\" value={status} onChange={this.handleChange}>\r\n                            <option value={true} >Kích Hoạt</option>\r\n                            <option value={false} >Ẩn</option>\r\n                        </select>\r\n                        <br />\r\n                        <div className=\"text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-warning\" ><i className=\"ti-pencil\"></i>Thêm</button>&nbsp;\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.cleaerForm}><i className=\"ti-close\"></i>Hủy Bỏ</button>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isDisplay: state.isDisplay,\r\n        updateI: state.updateI\r\n\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSaveTask: (task) => {\r\n            return dispatch(actions.ADDTASK(task));\r\n        },\r\n        onCloseForm: () => {\r\n            dispatch(actions.CLOSE())\r\n        },\r\n        onShowForm: () => {\r\n            dispatch(actions.OPEN());\r\n          },\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Taskform);\r\n","import React, { Component } from 'react';\r\nimport { SEARCH } from './../actions/index';\r\nimport { connect } from 'react-redux';\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keywords: ''\r\n        }\r\n    }\r\n    onChange = (event) => {\r\n        let target = event.target;\r\n        let name = target.name;\r\n        let value = target.value;\r\n        this.setState({ [name]: value });\r\n        if (this.state.keywords.length <= 1) {\r\n            this.props.onSearch({ keywords: '' });\r\n        }\r\n    }\r\n    onSearch = () => {\r\n        this.props.onSearch(this.state);\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"input-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Nhập từ khóa...\" name=\"keywords\" value={this.state.keywords} onChange={this.onChange} />\r\n                    <span className=\"input-group-btn\">\r\n                        <button className=\"btn btn-primary\" type=\"button\" onClick={this.onSearch}>\r\n                            <span className=\"fa fa-search mr-5\" /><i className=\"ti-search\"></i> Tìm\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        filter: state.filter,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSearch: (keywords) => {\r\n            return dispatch(SEARCH(keywords));\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {SORT} from './../actions/index';\r\nclass Sort extends Component {\r\n    OnClick = (by, value) => {\r\n        this.props.onSort({by, value});\r\n    }\r\n    render() {\r\n        let { by, value } = this.props.sort;\r\n        return (\r\n\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                        <i className=\"ti-angle-down\"></i>Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\" />\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <li onClick={() => this.OnClick('name', 1)}>\r\n                            <a href=\"/#\" className={by === 'name' && value === 1 ? 'sort-selected' : ''} role=\"button\">\r\n                                <span className=\"fa fa-sort-alpha-asc pr-5\">\r\n                                    Tên A-Z\r\n                                </span>\r\n                            </a>\r\n                        </li>\r\n                        <li onClick={() => this.OnClick('name', -1)}>\r\n                            <a href=\"/#\" className={by === 'name' && value === -1 ? 'sort-selected' : ''} role=\"button\">\r\n                                <span className=\"fa fa-sort-alpha-desc pr-5\">\r\n                                    Tên Z-A\r\n                                </span>\r\n                            </a>\r\n                        </li>\r\n                        <li role=\"separator\" className=\"divider\" />\r\n                        <li onClick={() => this.OnClick('status', 1)}><a href=\"/#\" className={by === 'status' && value === 1 ? 'sort-selected' : ''} role=\"button\">Trạng Thái Kích Hoạt</a></li>\r\n                        <li onClick={() => this.OnClick('status', -1)}><a href=\"/#\" className={by === 'status' && value === -1 ? 'sort-selected' : ''} role=\"button\">Trạng Thái Ẩn</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n     sort: state.sort,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch,props) =>{\r\n    return {\r\n        onSort:(sort)=>{\r\n            return dispatch(SORT(sort));\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sort);\r\n","import React, { Component } from 'react'\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\n\r\n class Control extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-15\">\r\n               <Search/>\r\n              <Sort/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Control;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './../actions/index';\r\nclass TaskItem extends Component {\r\n    onDelete = () => {\r\n        this.props.onDeleteByID(this.props.task.id);\r\n        this.props.onCloseForm();\r\n    }\r\n    onUpStatus = () => {\r\n        this.props.onUpdateStatus(this.props.task.id);\r\n    }\r\n    onUpdate = () => {\r\n        this.props.onShowForm();\r\n        this.props.onUpdateItem(this.props.task);\r\n    }\r\n    render() {\r\n        return (\r\n            <tr >\r\n                <td>{this.props.stt}</td>\r\n                <td>{this.props.task.name}</td>\r\n                <td className=\"text-center\" onClick={this.onUpStatus}>\r\n                    {this.props.task.status ?\r\n                        <span className=\"label label-success\">Kích Hoạt</span> :\r\n                        <span className=\"label label-danger\">Ẩn</span>}\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button type=\"button\" className=\"btn btn-warning\" onClick={this.onUpdate}>\r\n                        <span className=\"fa fa-pencil mr-5\" /><i className=\"ti-pencil\"></i> Sửa\r\n                    </button>\r\n                    &nbsp;\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={this.onDelete}>\r\n                        <span className=\"fa fa-trash mr-5\" /><i className=\"ti-close\"></i> Xóa\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onUpdateStatus: (id) => {\r\n            return dispatch(actions.UPDATESTATUS(id));\r\n        },\r\n        onDeleteByID: (id) => {\r\n            return dispatch(actions.DELETE(id));\r\n        },\r\n        onCloseForm: () => {\r\n            dispatch(actions.CLOSE())\r\n        },\r\n        onShowForm: () => {\r\n            dispatch(actions.OPEN());\r\n        },\r\n        onUpdateItem: (task) => {\r\n            dispatch(actions.UPDATE(task));\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);\r\n","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './../actions/index';\r\nclass TaskList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filtername: '',\r\n            filterStatus: -1,\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let target = event.target;\r\n        let name = target.name;\r\n        let value = target.value;\r\n        let filte = {\r\n            name: name === 'filtername' ? value : this.state.filtername,\r\n            status: name === 'filterStatus' ? value = parseInt(value) : this.state.filterStatus,\r\n        }\r\n        this.props.onFilter(filte);\r\n\r\n    }\r\n    render() {\r\n        let { filtername, filterStatus } = this.state;\r\n        let { tasks, filter, search, sort } = this.props;\r\n        if (filter.name) {\r\n            tasks = tasks.filter((task) => {\r\n                return task.name.toLowerCase().indexOf(filter.name.toLowerCase()) !== -1;\r\n            })\r\n        }\r\n        if (filter.status !== '') {\r\n            tasks = tasks.filter((task) => {\r\n                if (filter.status === -1) {\r\n                    return task;\r\n                } else {\r\n                    return task.status === (filter.status === 1 ? true : false) ? true : false;\r\n                }\r\n            })\r\n        }\r\n        if (search.keywords.length) {\r\n            tasks = tasks.filter((task) => {\r\n                return task.name.toLowerCase().indexOf(search.keywords.toLowerCase()) !== -1;\r\n            })\r\n        }\r\n        if (sort.by === 'name') {\r\n            tasks.sort((a, b) => {\r\n                if (a.name > b.name) return sort.value;\r\n                else if (a.name < b.name) return -sort.value;\r\n                else return 0;\r\n            });\r\n        } else {\r\n            tasks.sort((a, b) => {\r\n                if (a.status > b.status) return -sort.value;\r\n                else if (a.status < b.status) return sort.value;\r\n                else return 0;\r\n            })\r\n        }\r\n\r\n        let elements = tasks.map((task, index) => {\r\n            return <TaskItem key={task.id}\r\n                stt={index + 1} task={task}\r\n            />\r\n        });\r\n        return (\r\n            <table className=\"table table-bordered table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"text-center\">STT</th>\r\n                        <th className=\"text-center\">Tên</th>\r\n                        <th className=\"text-center\">Trạng Thái</th>\r\n                        <th className=\"text-center\">Hành Động</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td />\r\n                        <td>\r\n                            <input type=\"text\" name=\"filtername\"\r\n                                className=\"form-control\" defaultValue={filtername}\r\n                                onChange={this.handleChange} />\r\n\r\n                        </td>\r\n                        <td>\r\n                            <select className=\"form-control\" name=\"filterStatus\" defaultValue={filterStatus} onChange={this.handleChange}>\r\n                                <option value={-1}>Tất Cả</option>\r\n                                <option value={0}>Ẩn</option>\r\n                                <option value={1}>Kích Hoạt</option>\r\n                            </select>\r\n                        </td>\r\n                        <td />\r\n                    </tr>\r\n                    {elements}\r\n                </tbody>\r\n            </table>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tasks: state.tasks,\r\n        filter: state.filter,\r\n        search: state.search,\r\n        sort: state.sort,\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onFilter: (filter) => {\r\n            return dispatch(actions.FILTER(filter));\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","import React, { Component } from 'react';\nimport \"./App.css\";\nimport Taskform from './components/Taskform';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\nclass App extends Component {\n  toggleDisplay = () => {\n    let { updateI } = this.props;\n    if (updateI && updateI.id !== '') {\n      this.props.onShowForm();\n    } else {\n      this.props.onToggleDisplay(this.props.isDisplay);\n\n    }\n    this.props.onUpdateItem({ id: '', name: '', status: false });\n  }\n  render() {\n    let { isDisplay } = this.props;\n\n    return (\n\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Quản Lý Công Việc</h1>\n          <hr />\n        </div>\n        <div className=\"row\">\n          <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\n            <Taskform\n            />\n          </div>\n          <div className={isDisplay ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n            <button type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={this.toggleDisplay}>\n              <span className=\"fa fa-plus mr-5\" />Thêm Công Việc\n            </button>\n            <Control />\n            <div className=\"row mt-15\">\n              <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <TaskList\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    isDisplay: state.isDisplay,\n    updateI: state.updateI,\n  }\n}\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleDisplay: (isDisplay) => {\n      dispatch(actions.TOGGLE(isDisplay));\n    },\n    onUpdateItem: (task) => {\n      dispatch(actions.UPDATE(task));\n    },\n    onShowForm: () => {\n      dispatch(actions.OPEN());\n    },\n\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as TYPE from \"./../constants/actionTYPE\";\r\nimport { findIndex } from \"lodash\";\r\nvar data = JSON.parse(localStorage.getItem('keytask'));\r\nvar initial = data ? data : [];\r\nconst s4 = () => {\r\n  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n}\r\nconst gennerateID = () => {\r\n  return s4() + s4() + '-' + s4() + '-' + s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4();\r\n}\r\nvar myReducer = (state = initial, action) => {\r\n  let index = -1;\r\n  switch (action.type) {\r\n    case TYPE.VIEWLIST:\r\n      return state;\r\n    case TYPE.ADDTASK:\r\n      if (action.task.id) {\r\n        index = findIndex(state, (task) => {\r\n          return task.id === action.task.id;\r\n        });\r\n        if (index !== -1) {\r\n          state[index] = {\r\n            ...action.task\r\n          }\r\n        }\r\n      } else {\r\n        let newTask = {\r\n          id: gennerateID(),\r\n          name: action.task.name,\r\n          status: action.task.status,\r\n        }\r\n        console.log(newTask);\r\n        state.push(newTask);\r\n      }\r\n      localStorage.setItem('keytask', JSON.stringify(state));\r\n      return [...state];\r\n    case TYPE.UPDATE_STATUS:\r\n      index = findIndex(state, (task) => {\r\n        return task.id === action.id;\r\n      });\r\n\r\n      if (index !== -1) {\r\n        state[index] = {\r\n          ...state[index],\r\n          status: !state[index].status,\r\n        };\r\n      }\r\n      localStorage.setItem('keytask', JSON.stringify(state));\r\n      return [...state];\r\n    case TYPE.DELETE:\r\n      index = findIndex(state, (task) => {\r\n        return task.id === action.id;\r\n      });\r\n      if (index !== -1) {\r\n        state.splice(index, 1);\r\n      }\r\n      localStorage.setItem('keytask', JSON.stringify(state));\r\n      return [...state];\r\n    default: return state;\r\n  }\r\n}\r\nexport default myReducer;","import * as TYPE from \"./../constants/actionTYPE\";\r\nlet initial = false;\r\nlet myReducer = (state = initial, action) => {\r\n  switch (action.type) {\r\n    case TYPE.TOGGLE_FORM:\r\n      state = action.status\r\n      return state;\r\n    case TYPE.SHOW_FORM:\r\n      return true;\r\n    case TYPE.CLOSE_FORM:\r\n      return state=false;\r\n    default: return state;\r\n  }\r\n}\r\nexport default myReducer;","import * as TYPE from \"./../constants/actionTYPE\";\r\nlet initial = {\r\n  id: '',\r\n  name: '',\r\n  status:false\r\n};\r\nlet myReducer = (state = initial, action) => {\r\n  switch (action.type) {\r\n      case TYPE.UPDATE:\r\n       state = action;\r\n        return state;\r\n    default: return state;\r\n  }\r\n}\r\nexport default myReducer;","import * as TYPE from \"./../constants/actionTYPE\";\r\nlet initial = {\r\n  name: '',\r\n  status: -1,\r\n};\r\nlet myReducer = (state = initial, action) => {\r\n  switch (action.type) {\r\n    case TYPE.FILTER_TABLE:\r\n      return action.filter?action.filter:state;\r\n    default: return state;\r\n  }\r\n}\r\nexport default myReducer;","import * as TYPE from \"./../constants/actionTYPE\";\r\nlet initial = {\r\n  keywords: '',\r\n};\r\nlet myReducer = (state = initial, action) => {\r\n  switch (action.type) {\r\n    case TYPE.SEARCH:\r\n      return action.keywords?action.keywords:state;\r\n    default: return state;\r\n  }\r\n}\r\nexport default myReducer;","import * as TYPE from \"./../constants/actionTYPE\";\r\nlet initial = {\r\n  by: 'name',\r\n  value: -1,\r\n};\r\nlet myReducer = (state = initial, action) => {\r\n  switch (action.type) {\r\n    case TYPE.SORT:\r\n      return action.sort?action.sort:state;\r\n    default: return state;\r\n  }\r\n}\r\nexport default myReducer;","import { combineReducers } from \"redux\";\r\nimport tasks from \"./tasks\";\r\nimport isDisplay from \"./isDisplay\";\r\nimport updateI from \"./updateItem\";\r\nimport filter from \"./filterTable\";\r\nimport search from \"./search\";\r\nimport sort from \"./sort\";\r\nconst myReducer = combineReducers({\r\n    tasks,\r\n    isDisplay,\r\n    updateI,\r\n    filter,\r\n    search,\r\n    sort\r\n\r\n});\r\nexport default myReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport myReducer from './reducers/index';\nimport { Provider } from 'react-redux';\nconst store = createStore(myReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode >\n  ,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}